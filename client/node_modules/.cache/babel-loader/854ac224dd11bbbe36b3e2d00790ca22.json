{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/Chainalysis_test/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport DisplayStocks from \"./Components/recommendations\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // Setting up our state variables to hold out different crypto prices\n  const [Bit1, setBit1] = useState(\"\");\n  const [Bit2, setBit2] = useState(\"\");\n  const [Eth1, setEth1] = useState(\"\");\n  const [Eth2, setEth2] = useState(\"\");\n  const [stockId, setStockId] = useState(\"\"); // First useEffect to call our first exchange Bitcoin price. This will call once on page load and then again when we refresh the page with the applicable button.\n  // useEffect(() => {\n  //   // Setting our URL and APIKey needed for this specific GET request\n  //   const URL = \"https://api.blockchain.com/v3/exchange/tickers/BTC-USD\";\n  //   const USER_TOKEN = \"82e5aad3-967e-417c-9c6f-82a897b3a603\";\n  //   const AuthString = \"Bearer \".concat(USER_TOKEN);\n  //   axios\n  //     .get(URL, { headers: { Authorization: AuthString } })\n  //     .then((response) => {\n  //       console.log(response.data);\n  //       setBit1(response.data.last_trade_price);\n  //     })\n  //     .catch((error) => {\n  //       console.log(\"error \" + error);\n  //     });\n  // }, []);\n  // useEffect(() => {\n  //   const URL = \"https://api.blockchain.com/v3/exchange/tickers/ETH-USD\";\n  //   const USER_TOKEN = \"82e5aad3-967e-417c-9c6f-82a897b3a603\";\n  //   const AuthString = \"Bearer \".concat(USER_TOKEN);\n  //   axios\n  //     .get(URL, { headers: { Authorization: AuthString } })\n  //     .then((response) => {\n  //       console.log(response.data);\n  //       setEth1(response.data.last_trade_price);\n  //     })\n  //     .catch((error) => {\n  //       console.log(\"error \" + error);\n  //     });\n  // }, []);\n  // useEffect(() => {\n  //   const URL =\n  //     \"https://min-api.cryptocompare.com/data/price?fsym=BTC&tsyms=USD\";\n  //   const USER_TOKEN =\n  //     \"5a04c723bfb95037e838e1a32471f370b94da79354fb820070e789999aa9d78f\";\n  //   const AuthString = \"Bearer \".concat(USER_TOKEN);\n  //   axios\n  //     .get(URL, { headers: { Authorization: AuthString } })\n  //     .then((response) => {\n  //       console.log(response.data);\n  //       setBit2(response.data.USD);\n  //     })\n  //     .catch((error) => {\n  //       console.log(\"error \" + error);\n  //     });\n  // }, []);\n  // useEffect(() => {\n  //   const URL =\n  //     \"https://min-api.cryptocompare.com/data/price?fsym=ETH&tsyms=USD\";\n  //   const USER_TOKEN =\n  //     \"5a04c723bfb95037e838e1a32471f370b94da79354fb820070e789999aa9d78f\";\n  //   const AuthString = \"Bearer \".concat(USER_TOKEN);\n  //   axios\n  //     .get(URL, { headers: { Authorization: AuthString } })\n  //     .then((response) => {\n  //       console.log(response.data);\n  //       setEth2(response.data.USD);\n  //     })\n  //     .catch((error) => {\n  //       console.log(\"error \" + error);\n  //     });\n  // }, []);\n\n  useEffect(() => {\n    const BCURLBIT = \"https://api.blockchain.com/v3/exchange/tickers/BTC-USD\";\n    const BCURLETH = \"https://api.blockchain.com/v3/exchange/tickers/ETH-USD\";\n    const BCUSER_TOKEN = \"82e5aad3-967e-417c-9c6f-82a897b3a603\";\n    const BCAuthString = \"Bearer \".concat(BCUSER_TOKEN);\n    const CCURLBIT = \"https://min-api.cryptocompare.com/data/price?fsym=BTC&tsyms=USD\";\n    const CCURLETH = \"https://min-api.cryptocompare.com/data/price?fsym=ETH&tsyms=USD\";\n    const CCUSER_TOKEN = \"5a04c723bfb95037e838e1a32471f370b94da79354fb820070e789999aa9d78f\";\n    const CCAuthString = \"Bearer \".concat(CCUSER_TOKEN);\n    const axiosrequest1 = axios.get(BCURLBIT, {\n      headers: {\n        Authorization: BCAuthString\n      }\n    });\n    const axiosrequest2 = axios.get(BCURLETH, {\n      headers: {\n        Authorization: BCAuthString\n      }\n    });\n    const axiosrequest3 = axios.get(CCURLBIT, {\n      headers: {\n        Authorization: CCAuthString\n      }\n    });\n    const axiosrequest4 = axios.get(CCURLETH, {\n      headers: {\n        Authorization: CCAuthString\n      }\n    });\n    axios.all([axiosrequest1, axiosrequest2, axiosrequest3, axiosrequest4]).then(axios.spread(function (res1, res2, res3, res4) {\n      console.log(res1);\n      setBit1(res1);\n      console.log(res2);\n      setBit2(res2);\n      console.log(res3);\n      setEth1(res3);\n      console.log(res4);\n      setEth2(res4);\n    })).catch(err => {\n      console.log(err);\n    });\n  }, []);\n\n  const onClickHandler = e => {\n    e.preventDefault();\n    const price = {\n      Bit1,\n      Bit2,\n      Eth1,\n      Eth2\n    };\n    axios.post(\"http://localhost:8000/api/Stock\", price).then(response => {\n      setStockId(response.data._id);\n      console.log(stockId);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Stock Prices\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => window.location.reload(false),\n      children: \"Click to Refresh Prices!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClickHandler,\n        children: \"Click to Save Prices!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"0goxjDdb0fybUZ76WDd9VL3Xop8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/admin/Desktop/Chainalysis_test/client/src/App.js"],"names":["useEffect","useState","axios","DisplayStocks","App","Bit1","setBit1","Bit2","setBit2","Eth1","setEth1","Eth2","setEth2","stockId","setStockId","BCURLBIT","BCURLETH","BCUSER_TOKEN","BCAuthString","concat","CCURLBIT","CCURLETH","CCUSER_TOKEN","CCAuthString","axiosrequest1","get","headers","Authorization","axiosrequest2","axiosrequest3","axiosrequest4","all","then","spread","res1","res2","res3","res4","console","log","catch","err","onClickHandler","e","preventDefault","price","post","response","data","_id","window","location","reload"],"mappings":"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","sourcesContent":["import \"./App.css\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport DisplayStocks from \"./Components/recommendations\";\n\nfunction App() {\n  // Setting up our state variables to hold out different crypto prices\n  const [Bit1, setBit1] = useState(\"\");\n  const [Bit2, setBit2] = useState(\"\");\n  const [Eth1, setEth1] = useState(\"\");\n  const [Eth2, setEth2] = useState(\"\");\n  const [stockId, setStockId] = useState(\"\");\n  // First useEffect to call our first exchange Bitcoin price. This will call once on page load and then again when we refresh the page with the applicable button.\n  // useEffect(() => {\n  //   // Setting our URL and APIKey needed for this specific GET request\n  //   const URL = \"https://api.blockchain.com/v3/exchange/tickers/BTC-USD\";\n  //   const USER_TOKEN = \"82e5aad3-967e-417c-9c6f-82a897b3a603\";\n  //   const AuthString = \"Bearer \".concat(USER_TOKEN);\n  //   axios\n  //     .get(URL, { headers: { Authorization: AuthString } })\n  //     .then((response) => {\n  //       console.log(response.data);\n  //       setBit1(response.data.last_trade_price);\n  //     })\n  //     .catch((error) => {\n  //       console.log(\"error \" + error);\n  //     });\n  // }, []);\n  // useEffect(() => {\n  //   const URL = \"https://api.blockchain.com/v3/exchange/tickers/ETH-USD\";\n  //   const USER_TOKEN = \"82e5aad3-967e-417c-9c6f-82a897b3a603\";\n  //   const AuthString = \"Bearer \".concat(USER_TOKEN);\n  //   axios\n  //     .get(URL, { headers: { Authorization: AuthString } })\n  //     .then((response) => {\n  //       console.log(response.data);\n  //       setEth1(response.data.last_trade_price);\n  //     })\n  //     .catch((error) => {\n  //       console.log(\"error \" + error);\n  //     });\n  // }, []);\n  // useEffect(() => {\n  //   const URL =\n  //     \"https://min-api.cryptocompare.com/data/price?fsym=BTC&tsyms=USD\";\n  //   const USER_TOKEN =\n  //     \"5a04c723bfb95037e838e1a32471f370b94da79354fb820070e789999aa9d78f\";\n  //   const AuthString = \"Bearer \".concat(USER_TOKEN);\n  //   axios\n  //     .get(URL, { headers: { Authorization: AuthString } })\n  //     .then((response) => {\n  //       console.log(response.data);\n  //       setBit2(response.data.USD);\n  //     })\n  //     .catch((error) => {\n  //       console.log(\"error \" + error);\n  //     });\n  // }, []);\n  // useEffect(() => {\n  //   const URL =\n  //     \"https://min-api.cryptocompare.com/data/price?fsym=ETH&tsyms=USD\";\n  //   const USER_TOKEN =\n  //     \"5a04c723bfb95037e838e1a32471f370b94da79354fb820070e789999aa9d78f\";\n  //   const AuthString = \"Bearer \".concat(USER_TOKEN);\n  //   axios\n  //     .get(URL, { headers: { Authorization: AuthString } })\n  //     .then((response) => {\n  //       console.log(response.data);\n  //       setEth2(response.data.USD);\n  //     })\n  //     .catch((error) => {\n  //       console.log(\"error \" + error);\n  //     });\n  // }, []);\n  useEffect(() => {\n    const BCURLBIT = \"https://api.blockchain.com/v3/exchange/tickers/BTC-USD\";\n    const BCURLETH = \"https://api.blockchain.com/v3/exchange/tickers/ETH-USD\";\n    const BCUSER_TOKEN = \"82e5aad3-967e-417c-9c6f-82a897b3a603\";\n    const BCAuthString = \"Bearer \".concat(BCUSER_TOKEN);\n    const CCURLBIT =\n      \"https://min-api.cryptocompare.com/data/price?fsym=BTC&tsyms=USD\";\n    const CCURLETH =\n      \"https://min-api.cryptocompare.com/data/price?fsym=ETH&tsyms=USD\";\n    const CCUSER_TOKEN =\n      \"5a04c723bfb95037e838e1a32471f370b94da79354fb820070e789999aa9d78f\";\n    const CCAuthString = \"Bearer \".concat(CCUSER_TOKEN);\n    const axiosrequest1 = axios.get(BCURLBIT, {\n      headers: { Authorization: BCAuthString },\n    });\n    const axiosrequest2 = axios.get(BCURLETH, {\n      headers: { Authorization: BCAuthString },\n    });\n    const axiosrequest3 = axios.get(CCURLBIT, {\n      headers: { Authorization: CCAuthString },\n    });\n    const axiosrequest4 = axios.get(CCURLETH, {\n      headers: { Authorization: CCAuthString },\n    });\n    axios\n      .all([axiosrequest1, axiosrequest2, axiosrequest3, axiosrequest4])\n      .then(\n        axios.spread(function (res1, res2, res3, res4) {\n          console.log(res1);\n          setBit1(res1);\n          console.log(res2);\n          setBit2(res2);\n          console.log(res3);\n          setEth1(res3);\n          console.log(res4);\n          setEth2(res4);\n        })\n      )\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n  const onClickHandler = (e) => {\n    e.preventDefault();\n    const price = { Bit1, Bit2, Eth1, Eth2 };\n    axios\n      .post(\"http://localhost:8000/api/Stock\", price)\n      .then((response) => {\n        setStockId(response.data._id);\n        console.log(stockId);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  return (\n    <div>\n      <h1>Stock Prices</h1>\n      <button onClick={() => window.location.reload(false)}>\n        Click to Refresh Prices!\n      </button>\n      <div>\n        <button onClick={onClickHandler}>Click to Save Prices!</button>\n      </div>\n      {/* <DisplayStocks stockId={stockId} /> */}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}